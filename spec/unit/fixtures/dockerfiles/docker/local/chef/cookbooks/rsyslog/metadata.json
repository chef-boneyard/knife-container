{
  "name": "rsyslog",
  "version": "1.12.2",
  "description": "Installs and configures rsyslog",
  "long_description": "rsyslog Cookbook\n================\n[![Build Status](https://secure.travis-ci.org/opscode-cookbooks/rsyslog.png?branch=master)](http://travis-ci.org/opscode-cookbooks/rsyslog)\n\nInstalls and configures rsyslog to replace sysklogd for client and/or server use. By default, the service will be configured to log to files on local disk. See the Recipes and Examples sections for other uses.\n\n\nRequirements\n------------\n### Platforms\nTested on:\n- Ubuntu 9.10\n- Ubuntu 10.04\n- RedHat 6.3\n- OmniOS r151006c\n\n### Other\nTo use the `recipe[rsyslog::client]` recipe, you'll need to set up the `rsyslog.server_search` or `rsyslog.server_ip` attributes.  See the __Recipes__ and __Examples__ sections below.\n\n\nAttributes\n----------\nSee `attributes/default.rb` for default values.\n\n* `node['rsyslog']['log_dir']` - If the node is an rsyslog server, this specifies the directory where the logs should be stored.\n* `node['rsyslog']['server']` - Determined automaticaly and set to true on the server.\n* `node['rsyslog']['server_ip']` - If not defined then search will be used to determine rsyslog server. Default is `nil`.  This can be a string or an array.\n* `node['rsyslog']['server_search']` - Specify the criteria for the server search operation. Default is `role:loghost`.\n* `node['rsyslog']['protocol']` - Specify whether to use `udp` or `tcp` for remote loghost. Default is `tcp`.\n* `node['rsyslog']['port']` - Specify the port which rsyslog should connect to a remote loghost.\n* `node['rsyslog']['remote_logs']` - Specify wether to send all logs to a remote server (client option). Default is `true`.\n* `node['rsyslog']['per_host_dir']` - \"PerHost\" directories for template statements in `35-server-per-host.conf`. Default value is the previous cookbook version's value, to preserve compatibility. See __server__ recipe below.\n* `node['rsyslog']['priv_seperation']` - Whether to use privilege seperation or not.\n* `node['rsyslog']['max_message_size']` - Specify the maximum allowed message size. Default is 2k.\n* `node['rsyslog']['user']` - Who should own the configuration files and directories\n* `node['rsyslog']['group']` - Who should group-own the configuration files and directories\n* `node['rsyslog']['defaults_file']` - The full path to the defaults/sysconfig file for the service.\n* `node['rsyslog']['service_name']` - The platform-specific name of the service\n* `node['rsyslog']['preserve_fqdn']` - Value of the `$PreserveFQDN` configuration directive in `/etc/rsyslog.conf`. Default is 'off' for compatibility purposes.\n* `node['rsyslog']['high_precision_timestamps']` -  Enable high precision timestamps, instead of the \"old style\" format.  Default is 'false'.\n* `node['rsyslog']['repeated_msg_reduction']` -  Value of `$RepeatedMsgReduction` configuration directive in `/etc/rsyslog.conf`. Default is 'on'\n* `node['rsyslog']['logs_to_forward']` -  Specifies what logs should be sent to the remote rsyslog server. Default is all ( \\*.\\* ).\n* `node['rsyslog']['default_log_dir']` - log directory used in `50-default.conf` template, defaults to `/var/log`\n* `node['rsyslog']['default_facility_logs']` - Hash containing log facilities and destinations used in `50-default.conf` template.\n* `node['rsyslog']['default_facility_logs']` - Hash containing log facilities and destinations used in 50-default.conf template.\n* `node['rsyslog']['default_file_template']` - The name of a pre-defined log format template (ie - RSYSLOG_FileFormat), used for local log files.\n* `node['rsyslog']['rate_limit_interval']` - Value of the $SystemLogRateLimitInterval configuration directive in `/etc/rsyslog.conf`. Default is nil, leaving it to the platform default.\n* `node['rsyslog']['rate_limit_burst']` - Value of the $SystemLogRateLimitBurst configuration directive in `/etc/rsyslog.conf`. Default is nil, leaving it to the platform default.\n* `node['rsyslog']['enable_tls']` - Whether or not to enable TLS encryption.  When enabled, forces protocol to `tcp`. Default is `false`.\n* `node['rsyslog']['tls_ca_file']` - Path to TLS CA file. Required for both server and clients.\n* `node['rsyslog']['tls_certificate_file']` - Path to TLS certificate file. Required for server, optional for clients.\n* `node['rsyslog']['tls_key_file']` - Path to TLS key file. Required for server, optional for clients.\n* `node['rsyslog']['tls_auth_mode']` - Value for `$InputTCPServerStreamDriverAuthMode`/`$ActionSendStreamDriverAuthMode`, determines whether client certs are validated. Defaults to `anon` (no validation).\n* `node['rsyslog']['use_local_ipv4']` - Whether or not to make use the remote local IPv4 address on cloud systems when searching for servers (where available).  Default is 'false'.\n\nRecipes\n-------\n### default\nInstalls the rsyslog package, manages the rsyslog service and sets up basic configuration for a standalone machine.\n\n### client\nIncludes `recipe[rsyslog]`.\n\nUses `node['rsyslog']['server_ip']` or Chef search (in that precedence order) to determine the remote syslog server's IP address. If search is used, the search query will look for the first `ipaddress` returned from the criteria specified in `node['rsyslog']['server_search']`.\n\nIf the node itself is a rsyslog server ie it has `rsyslog.server` set to true then the configuration is skipped.\n\nIf the node had an `/etc/rsyslog.d/35-server-per-host.conf` file previously configured, this file gets removed to prevent duplicate logging.\n\nAny previous logs are not cleaned up from the `log_dir`.\n\n### server\nConfigures the node to be a rsyslog server. The chosen rsyslog server node should be defined in the `server_ip` attribute or resolvable by the specified search criteria specified in `node['rsyslog']['server_search]` (so that nodes making use of the `client` recipe can find the server to log to).\n\nThis recipe will create the logs in `node['rsyslog']['log_dir']`, and the configuration is in `/etc/rsyslog.d/server.conf`. This recipe also removes any previous configuration to a remote server by removing the `/etc/rsyslog.d/remote.conf` file.\n\nThe cron job used in the previous version of this cookbook is removed, but it does not remove any existing cron job from your system (so it doesn't break anything unexpectedly). We recommend setting up logrotate for the logfiles instead.\n\nThe `log_dir` will be concatenated with `per_host_dir` to store the logs for each client. Modify the attribute to have a value that is allowed by rsyslogs template matching values, see the rsyslog documentation for this.\n\nDirectory structure:\n\n```erb\n<%= @log_dir %>/<%= @per_host_dir %>/\"logfile\"\n```\n\nFor example for the system with hostname `www`:\n\n```text\n/srv/rsyslog/2011/11/19/www/messages\n```\n\nFor example, to change this to just the hostname, set the attribute `node['rsyslog']['per_host_dir']` via a role:\n\n```ruby\n\"rsyslog\" => { \"per_host_dir\" => \"%HOSTNAME%\" }\n```\n\nAt this time, the server can only listen on UDP *or* TCP.\n\n\nUsage\n-----\nUse `recipe[rsyslog]` to install and start rsyslog as a basic configured service for standalone systems.\n\nUse `recipe[rsyslog::client]` to have nodes log to a remote server (which is found via the `server_ip` attribute or by the recipe's search call -- see __client__)\n\nUse `recipe[rsyslog::server]` to set up a rsyslog server. It will listen on `node['rsyslog']['port']` protocol `node['rsyslog']['protocol']`.\n\nIf you set up a different kind of centralized loghost (syslog-ng, graylog2, logstash, etc), you can still send log messages to it as long as the port and protocol match up with the server software. See __Examples__\n\n\n### Examples\nA `base` role (e.g., roles/base.rb), applied to all nodes so they are syslog clients:\n\n```ruby\nname \"base\"\ndescription \"Base role applied to all nodes\nrun_list(\"recipe[rsyslog::client]\")\n```\n\nThen, a role for the loghost (should only be one):\n\n```ruby\nname \"loghost\"\ndescription \"Central syslog server\"\nrun_list(\"recipe[rsyslog::server]\")\n```\n\nBy default this will set up the clients search for a node with the `loghost` role to talk to the server on TCP port 514. Change the `protocol` and `port` rsyslog attributes to modify this.\n\nIf you want to specify another syslog compatible server with a role other than loghost, simply fill free to use the `server_ip` attribute or the `server_search` attribute.\n\nExample role that sets the per host directory:\n\n```ruby\nname \"loghost\"\ndescription \"Central syslog server\"\nrun_list(\"recipe[rsyslog::server]\")\ndefault_attributes(\n  \"rsyslog\" => { \"per_host_dir\" => \"%HOSTNAME%\" }\n)\n```\n\nDefault rsyslog options are rendered for RHEL family platforms, in `/etc/rsyslog.d/50-default.conf`\nwith other platforms using a configuration like Debian family defaults.  You can override these\nlog facilities and destinations using the `rsyslog['default_facility_logs']` hash.\n\n```ruby\nname \"facility_log_example\"\nrun_list(\"recipe[rsyslog::default]\")\ndefault_attributes(\n  \"rsyslog\" => {\n    \"facility_logs\" => {\n      '*.info;mail.none;authpriv.none;cron.none' => \"/var/log/messages\",\n      'authpriv' => '/var/log/secure',\n      'mail.*' => '-/var/log/maillog',\n      '*.emerg' => '*'\n    }\n  }\n)\n```\n\nDevelopment\n-----------\nThis section details \"quick development\" steps. For a detailed explanation, see [[Contributing.md]].\n\n1. Clone this repository from GitHub:\n\n    $ git clone git@github.com:opscode-cookbooks/rsyslog.git\n\n2. Create a git branch\n\n    $ git checkout -b my_bug_fix\n\n3. Install dependencies:\n\n    $ bundle install\n\n4. Make your changes/patches/fixes, committing appropiately\n5. **Write tests**\n6. Run the tests:\n    - bundle exec foodcritic -f any .\n    - bundle exec rspec\n    - bundle exec rubocop\n    - bundle exec kitchen test\n\n  In detail:\n    - Foodcritic will catch any Chef-specific style errors\n    - RSpec will run the unit tests\n    - Rubocop will check for Ruby-specific style errors\n    - Test Kitchen will run and converge the recipes\n\n\nLicense & Authors\n-----------------\n- Author:: Joshua Timberman (<joshua@opscode.com>)\n- Author:: Denis Barishev (<denz@twiket.com>)\n- Author:: Tim Smith (<tsmith@limelight.com>)\n\n```text\nCopyright:: 2009-2013, Opscode, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "maintainer": "Opscode, Inc.",
  "maintainer_email": "cookbooks@opscode.com",
  "license": "Apache 2.0",
  "platforms": {
    "ubuntu": ">= 0.0.0",
    "debian": ">= 5.0.0",
    "redhat": ">= 6.0.0"
  },
  "dependencies": {
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
    "rsyslog": {
      "display_name": "Rsyslog",
      "description": "Hash of Rsyslog attributes",
      "type": "hash"
    },
    "rsyslog/log_dir": {
      "display_name": "Rsyslog Log Directory",
      "description": "Filesystem location of logs from clients",
      "default": "/srv/rsyslog"
    },
    "rsyslog/server": {
      "display_name": "Rsyslog Server?",
      "description": "Is this node an rsyslog server?",
      "default": "false"
    },
    "rsyslog/server_ip": {
      "display_name": "Rsyslog Server IP Address",
      "description": "Set rsyslog server ip address explicitly"
    },
    "rsyslog/server_search": {
      "display_name": "Rsyslog Server Search Criteria",
      "description": "Set the search criteria for rsyslog server resolving",
      "default": "role:loghost"
    },
    "rsyslog/protocol": {
      "display_name": "Rsyslog Protocol",
      "description": "Set which network protocol to use for rsyslog",
      "default": "tcp"
    },
    "rsyslog/port": {
      "display_name": "Rsyslog Port",
      "description": "Port that Rsyslog listens for incoming connections",
      "default": "514"
    },
    "rsyslog/remote_logs": {
      "display_name": "Remote Logs",
      "description": "Specifies whether redirect all log from client to server",
      "default": "true"
    },
    "rsyslog/user": {
      "display_name": "User",
      "description": "The owner of Rsyslog config files and directories",
      "default": "root"
    },
    "rsyslog/group": {
      "display_name": "Group",
      "description": "The group-owner of Rsyslog config files and directories",
      "default": "adm"
    },
    "rsyslog/service_name": {
      "display_name": "Service name",
      "description": "The name of the service for the platform",
      "default": "rsyslog"
    },
    "rsyslog/max_message_size": {
      "display_name": "Maximum Rsyslog message size",
      "description": "Specifies the maximum size of allowable Rsyslog messages",
      "default": "2k"
    },
    "rsyslog/preserve_fqdn": {
      "display_name": "Preserve FQDN",
      "description": "Specifies if the short or full host name will be used. The default off setting is more compatible.",
      "default": "off"
    },
    "rsyslog/repeated_msg_reduction": {
      "display_name": "Filter duplicated messages",
      "description": "Specifies whether or not repeated messages should be reduced.",
      "default": "on"
    },
    "rsyslog/priv_seperation": {
      "display_name": "Privilege separation",
      "description": "Whether or not to make use of Rsyslog privilege separation",
      "default": "false"
    },
    "rsyslog/default_file_template": {
      "display_name": "Default file log format template",
      "description": "The name of a pre-defined log format template (ie - `RSYSLOG_FileFormat`), used for local log files."
    },
    "rsyslog/default_remote_template": {
      "display_name": "Default remote log format template",
      "description": "The name of a pre-defined log format template (ie - `RSYSLOG_SyslogProtocol23Format`), used for remote log forwarding."
    },
    "rsyslog/enable_tls": {
      "display_name": "Enable TLS",
      "description": "Whether or not to enable TLS encryption. When enabled, forces protocol to \"tcp\"",
      "default": "false"
    },
    "rsyslog/tls_ca_file": {
      "display_name": "TLS CA file",
      "description": "Path to TLS CA file. Required for both server and clients."
    },
    "rsyslog/tls_certificate_file": {
      "display_name": "TLS certificate file",
      "description": "Path to TLS certificate file. Required for server, optional for clients."
    },
    "rsyslog/tls_key_file": {
      "display_name": "TLS key file",
      "description": "Path to TLS key file. Required for server, optional for clients."
    },
    "rsyslog/tls_auth_mode": {
      "display_name": "TLS auth mode",
      "description": "Value for \"$InputTCPServerStreamDriverAuthMode\"/\"$ActionSendStreamDriverAuthMode\", determines whether client certs are validated.",
      "default": "anon"
    },
    "rsyslog/use_local_ipv4": {
      "display_name": "Try to use local IPv4 address",
      "description": "Whether or not to make use the remote local IPv4 address on cloud systems when searching for servers (where available).",
      "default": "false"
    }
  },
  "groupings": {
  },
  "recipes": {
    "rsyslog": "Installs rsyslog",
    "rsyslog::client": "Sets up a client to log to a remote rsyslog server",
    "rsyslog::server": "Sets up an rsyslog server"
  }
}